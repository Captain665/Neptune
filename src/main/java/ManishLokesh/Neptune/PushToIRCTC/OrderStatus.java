package ManishLokesh.Neptune.PushToIRCTC;import com.fasterxml.jackson.databind.ObjectMapper;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.http.*;import org.springframework.stereotype.Service;import org.springframework.web.client.HttpClientErrorException;import org.springframework.web.client.RestTemplate;@Servicepublic class OrderStatus {    private final String EcateUrl;    private final String AuthToken;    private final RestTemplate restTemplate;    public ObjectMapper objectMapper;    public final Logger logger = LoggerFactory.getLogger("Status.Update.On.IRCTC");    public OrderStatus(RestTemplate restTemplate, @Value("${E-catering.stage.url}") String ecateUrl,                       @Value("${E-catering.auth.token}") String authToken, ObjectMapper objectMapper){        this.restTemplate = restTemplate;        this.EcateUrl = ecateUrl;        this.AuthToken = authToken;        this.objectMapper = objectMapper;    }    public String StatusPushToIrctc(Object status, long irctcOrderId){        logger.info("request for api/v1/order/"+irctcOrderId+"/status  requested JSON {}", status);            HttpHeaders httpHeaders = new HttpHeaders();            httpHeaders.setContentType(MediaType.APPLICATION_JSON);            httpHeaders.add("Authorization", AuthToken);            try{                ResponseEntity<String> response = this.restTemplate.exchange(                        EcateUrl + "api/v1/order/"+irctcOrderId+"/status",                        HttpMethod.POST,                        new HttpEntity<>(status, httpHeaders),                        String.class                );                logger.info("response JSON {}",response.getBody());                return response.getBody();            }catch (HttpClientErrorException e){                logger.info("Exception msg {}",e.getResponseBodyAsString());                return e.getResponseBodyAsString();            }    }}